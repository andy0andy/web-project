# GENERATED BY CHARIOT SDK - DO NOT EDIT
import chariot
import json


class Component:
    DESCRIPTION = ""


class Input:
    WORKSPACEID = "workspaceid"
    SESSIONID = "sessionid"
    PATH = "path"
    FILE = "file"
    NAME = "Name"
    EXECUTE = "execute"
    

class Output:
    STATUSCODE = "statuscode"
    DATA = "data"
    

class SessionsuploadInput(chariot.Input):
    schema = json.loads("""
   {
	"type": "object",
	"title": "Variables",
	"properties": {
		"Name": {
			"type": "string",
			"title": "上传文件名",
			"description": "",
			"order": 5
		},
		"execute": {
			"type": "boolean",
			"title": "是否执行上传文件",
			"description": "",
			"order": 6
		},
		"file": {
			"title": "上传文件",
			"description": "",
			"order": 4,
			"$ref": "#/definitions/file"
		},
		"path": {
			"type": "string",
			"title": "目录路径",
			"description": "",
			"order": 3
		},
		"sessionid": {
			"type": "string",
			"title": "会话id",
			"description": "",
			"order": 2
		},
		"workspaceid": {
			"type": "string",
			"title": "项目id",
			"description": "",
			"order": 1
		}
	},
	"required": [
		"workspaceid",
		"sessionid",
		"path",
		"file",
		"Name",
		"execute"
	],
	"definitions": {
		"file": {
			"id": "file",
			"type": "object",
			"title": "File",
			"description": "File Object",
			"properties": {
				"content": {
					"type": "string",
					"title": "Content",
					"description": "File contents",
					"format": "bytes"
				},
				"filename": {
					"type": "string",
					"title": "Filename",
					"description": "Name of file"
				}
			}
		}
	}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class SessionsuploadOutput(chariot.Output):
    schema = json.loads("""
   {
	"type": "object",
	"title": "Variables",
	"properties": {
		"data": {
			"type": "object",
			"title": "返回数据",
			"description": "",
			"order": 2
		},
		"statuscode": {
			"type": "integer",
			"title": "状态码",
			"description": "",
			"order": 1
		}
	},
	"required": [
		"statuscode"
	]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
