# GENERATED BY CHARIOT SDK - DO NOT EDIT
import chariot
import json


class Component:
    DESCRIPTION = ""


class Input:
    WORKSPACEID = "workspaceid"
    TARGETS = "targets"
    TIMEOUT = "timeout"
    LIMITSESSIONS = "limitsessions"
    PAYLOADTYPE = "payloadtype"
    CONNECTION = "connection"
    PAYLOADPORTS = "payloadports"
    PAYLOADHOSTS = "payloadhosts"
    HTTPUSERNAME = "httpusername"
    HTTPPASSWORD = "httppassword"
    HTTPDOMAIN = "httpdomain"
    COOKIE = "cookie"
    USERAGENT = "useragent"
    

class Output:
    STATUSCODE = "statuscode"
    SUCCESS = "success"
    WORKSPACEID = "workspaceid"
    TASKID = "taskid"
    ERRORS = "errors"
    

class TasksstartwebsploitInput(chariot.Input):
    schema = json.loads("""
   {
	"type": "object",
	"title": "Variables",
	"properties": {
		"connection": {
			"type": "string",
			"title": "连接类型",
			"description": "",
			"order": 6,
			"enum": [
				"Auto",
				"Reverse",
				"Bind"
			]
		},
		"cookie": {
			"type": "string",
			"title": "http Cookie",
			"description": "",
			"order": 12
		},
		"httpdomain": {
			"type": "string",
			"title": "http域",
			"description": "",
			"order": 11
		},
		"httppassword": {
			"type": "string",
			"title": "http密码",
			"description": "",
			"order": 10,
			"displayType": "password",
			"format": "password"
		},
		"httpusername": {
			"type": "string",
			"title": "http用户名",
			"description": "",
			"order": 9
		},
		"limitsessions": {
			"type": "boolean",
			"title": "每个目标建立一个会话",
			"description": "",
			"order": 4
		},
		"payloadhosts": {
			"type": "string",
			"title": "监听主机",
			"description": "",
			"order": 8
		},
		"payloadports": {
			"type": "string",
			"title": "监听端口",
			"description": "",
			"order": 7
		},
		"payloadtype": {
			"type": "string",
			"title": "荷载类型",
			"description": "",
			"order": 5,
			"enum": [
				"Meterpreter",
				"Meterpreter 64-bit",
				"Command shell",
				"Powershell"
			]
		},
		"targets": {
			"type": "string",
			"title": "目标web漏洞",
			"description": "JSON字符串, //POST /rest_api/v3/tasks/web_data, 返回data数据作为这个参数值",
			"order": 2
		},
		"timeout": {
			"type": "string",
			"title": "超时",
			"description": "",
			"order": 3
		},
		"useragent": {
			"type": "string",
			"title": "用户代理",
			"description": "",
			"order": 13
		},
		"workspaceid": {
			"type": "string",
			"title": "项目id",
			"description": "",
			"order": 1
		}
	},
	"required": [
		"workspaceid"
	]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class TasksstartwebsploitOutput(chariot.Output):
    schema = json.loads("""
   {
	"type": "object",
	"title": "Variables",
	"properties": {
		"errors": {
			"type": "string",
			"title": "错误信息",
			"description": "",
			"order": 5
		},
		"statuscode": {
			"type": "integer",
			"title": "状态码",
			"description": "",
			"order": 1
		},
		"success": {
			"type": "string",
			"title": "结果",
			"description": "",
			"order": 2
		},
		"taskid": {
			"type": "string",
			"title": "任务id",
			"description": "",
			"order": 4
		},
		"workspaceid": {
			"type": "string",
			"title": "项目id",
			"description": "",
			"order": 3
		}
	},
	"required": [
		"statuscode"
	]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
