# GENERATED BY CHARIOT SDK - DO NOT EDIT
import chariot
import json


class Component:
    DESCRIPTION = ""


class Input:
    WORKSPACEID = "workspaceid"
    REPORT = "report"
    

class Output:
    STATUSCODE = "statuscode"
    RESULT = "result"
    REPORT_ID = "report_id"
    

class WorkspacesreportsgenerateInput(chariot.Input):
    schema = json.loads("""
   {
	"type": "object",
	"title": "Variables",
	"properties": {
		"report": {
			"title": "报告",
			"description": "",
			"order": 2,
			"$ref": "#/definitions/reportstype"
		},
		"workspaceid": {
			"type": "string",
			"title": "项目id",
			"description": "",
			"order": 1
		}
	},
	"required": [
		"workspaceid"
	],
	"definitions": {
		"reportstype": {
			"type": "object",
			"title": "reportstype",
			"description": "",
			"properties": {
				"email_recipients": {
					"type": "string",
					"title": "报告类型",
					"description": "",
					"order": 2
				},
				"excluded_addresses": {
					"type": "string",
					"title": "排除地址",
					"description": "",
					"order": 7
				},
				"file_fomats": {
					"type": "string",
					"title": "报告文件类型",
					"description": "",
					"order": 4,
					"enum": [
						"word",
						"pdf",
						"html"
					]
				},
				"included_addresses": {
					"type": "string",
					"title": "包含地址",
					"description": "",
					"order": 6
				},
				"name": {
					"type": "string",
					"title": "报告名称",
					"description": "",
					"order": 5
				},
				"options": {
					"type": "string",
					"title": "选项",
					"description": "",
					"order": 1,
					"enum": [
						"mask_credentials",
						"include_sesssions",
						"include_charts"
					]
				},
				"report_type": {
					"type": "string",
					"title": "报告类型",
					"description": "",
					"order": 3,
					"enum": [
						"audit",
						"collected_evidence",
						"compromised_hosts",
						"credentials",
						"services",
						"social_engineering",
						"webapp_assessment"
					]
				},
				"sections": {
					"type": "string",
					"title": "分区",
					"description": "",
					"order": 8,
					"enum": [
						"exec_summ",
						"compr_hosts",
						"compr_creds",
						"disc_oses",
						"disc_hosts",
						"host_details",
						"disc_svcs",
						"web_sites"
					]
				}
			},
			"required": [
				"options",
				"email_recipients",
				"report_type",
				"file_fomats",
				"name",
				"included_addresses",
				"excluded_addresses",
				"sections"
			]
		}
	}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class WorkspacesreportsgenerateOutput(chariot.Output):
    schema = json.loads("""
   {
	"type": "object",
	"title": "Variables",
	"properties": {
		"report_id": {
			"type": "string",
			"title": "报告id",
			"description": "",
			"order": 3
		},
		"result": {
			"type": "string",
			"title": "Result",
			"description": "",
			"order": 2
		},
		"statuscode": {
			"type": "integer",
			"title": "状态码",
			"description": "",
			"order": 1
		}
	},
	"required": [
		"statuscode"
	]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
