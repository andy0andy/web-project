# GENERATED BY CHARIOT SDK - DO NOT EDIT
import chariot
import json


class Component:
    DESCRIPTION = ""


class Input:
    WORKSPACEID = "workspaceid"
    SESSIONID = "sessionid"
    SPECIAL = "special"
    CMD = "cmd"
    READ = "read"
    

class Output:
    STATUSCODE = "statuscode"
    SUCCESS = "success"
    EVENT = "event"
    

class SessionsshellInput(chariot.Input):
    schema = json.loads("""
   {
	"type": "object",
	"title": "Variables",
	"properties": {
		"cmd": {
			"type": "string",
			"title": "执行命令",
			"description": "",
			"order": 4
		},
		"read": {
			"type": "boolean",
			"title": "是否读取执行命令后返回的数据，不读取则不提交该参数 ",
			"description": "",
			"order": 5
		},
		"sessionid": {
			"type": "string",
			"title": "会话id",
			"description": "",
			"order": 2
		},
		"special": {
			"type": "string",
			"title": "如果设置为kill，则关闭会话",
			"description": "",
			"order": 3
		},
		"workspaceid": {
			"type": "string",
			"title": "项目id",
			"description": "",
			"order": 1
		}
	},
	"required": [
		"workspaceid",
		"sessionid"
	]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class SessionsshellOutput(chariot.Output):
    schema = json.loads("""
   {
	"type": "object",
	"title": "Variables",
	"properties": {
		"event": {
			"type": "string",
			"title": "事件",
			"description": "",
			"order": 3
		},
		"statuscode": {
			"type": "integer",
			"title": "状态码",
			"description": "",
			"order": 1
		},
		"success": {
			"type": "string",
			"title": "结果",
			"description": "",
			"order": 2
		}
	},
	"required": [
		"statuscode"
	]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
