import chariot
from .schema import TasksstartexploitInput, TasksstartexploitOutput, Input, Output, Component
# Custom imports below


class Tasksstartexploit(chariot.Action):

    def __init__(self):
        super(self.__class__, self).__init__(
                name='tasksstartexploit',
                description=Component.DESCRIPTION,
                input=TasksstartexploitInput(),
                output=TasksstartexploitOutput())

    def run(self, params={}):
        # TODO: Implement run function
        

        workspaceid = params.get(Input.WORKSPACEID)
        whiteliststring = params.get(Input.WHITELISTSTRING)
        minimumrank = params.get(Input.MINIMUMRANK)

        blackliststring = params.get(Input.BLACKLISTSTRING)
        payloadtype = params.get(Input.PAYLOADTYPE)
        connection = params.get(Input.CONNECTION)
        payloadports = params.get(Input.PAYLOADPORTS)
        portsblacklist = params.get(Input.PORTSBLACKLIST)
        payloadhost = params.get(Input.PAYLOADHOST)
        macroname = params.get(Input.MACRONAME)
        dynamicstager = params.get(Input.DYNAMICSTAGER)
        stageencodeing = params.get(Input.STAGEENCODEING)
        whitelistports = params.get(Input.WHITELISTPORTS)
        blacklistports = params.get(Input.BLACKLISTPORTS)
        filterbyos = params.get(Input.FILTERBYOS)
        filterbyport = params.get(Input.FILTERBYPORT)
        fingerusers = params.get(Input.FINGERUSERS)
        speed = params.get(Input.SPEED)
        timeout = params.get(Input.TIMEOUT)
        evasionleveltcp = params.get(Input.EVASIONLEVELTCP)
        evasionlevelapp = params.get(Input.EVASIONLEVELAPP)
        limitsessions = params.get(Input.LIMITSESSIONS)
        onlymatch = params.get(Input.ONLYMATCH)
        httpusername = params.get(Input.HTTPUSERNAME)
        httppassword = params.get(Input.HTTPPASSWORD)
        httpdomian = params.get(Input.HTTPDOMIAN)
        cookie = params.get(Input.COOKIE)
        useragent = params.get(Input.USERAGENT)




        yaoguang = self.connection.yaoguang

        api = "/rest_api/v3/tasks/start_exploit"

        try:
            

            yaoguang.addBody("workspace_id", workspaceid)
            yaoguang.addBody("whitelist_string", whiteliststring)
            yaoguang.addBody("minimum_rank", minimumrank)

            if blackstring:
                yaoguang.addBody("blacklist_string", blackstring)
            if payloadtype:
                yaoguang.addBody("payload_type", payloadtype)
            if connection:
                yaoguang.addBody("connection", connection)
            if payloadports:
                yaoguang.addBody("payload_ports", payloadports)
            if payloadhost:
                yaoguang.addBody("payload_lhost", payloadhost)
            if macroname:
                yaoguang.addBody("macro_name", macroname)
            if dynamicstager:
                yaoguang.addBody("dynamic_stager", dynamicstager)
            if stageencodeing:
                yaoguang.addBody("stage_encoding", stageencodeing)
            if whitelistports:
                yaoguang.addBody("whitelist_ports", whitelistports)
            if blacklistports:
                yaoguang.addBody("blacklist_ports", blacklistports)
            if filterbyos:
                yaoguang.addBody("filter_by_os", filterbyos)
            if filterbyport:
                yaoguang.addBody("filter_by_port", filterbyport)
            if speed:
                yaoguang.addBody("speed", speed)
            if timeout:
                yaoguang.addBody("timeout", timeout)
            if evasionleveltcp:
                yaoguang.addBody("evasion_level_tcp", evasionleveltcp)
            if evasionlevelapp:
                yaoguang.addBody("evasion_level_app", evasionlevelapp)
            if limitsessions:
                yaoguang.addBody("limit_sessions", limitsessions)
            if onlymatch:
                yaoguang.addBody("only_match", onlymatch)
            if httpusername:
                yaoguang.addBody("http_username", httpusername)
            if httppassword:
                yaoguang.addBody("http_password", httppassword)
            if httpdomian:
                yaoguang.addBody("http_domian", httpdomian)
            if cookie:
                yaoguang.addBody("cookie", cookie)
            if useragent:
                yaoguang.addBody("user_agent", useragent)

            data, code = yaoguang.reqData(api, "POST")

            result = {
                Output.STATUSCODE: code
            }
            
            if data.get("success"):
                result.update({Output.SUCCESS: data['success']})
            if data.get("workspace_id"):
                result.update({Output.WORKSPACEID: data['workspace_id']})
            if data.get("task_id"):
                result.update({Output.TASKID: data['task_id']})
            if data.get("errors"):
                result.update({Output.ERRORS: data['errors']})

            return result

        except Exception as e:
            raise Exception(f"f{self.__class__.__name__} - {str(e)}")