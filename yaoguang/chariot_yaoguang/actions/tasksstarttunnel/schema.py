# GENERATED BY CHARIOT SDK - DO NOT EDIT
import chariot
import json


class Component:
    DESCRIPTION = ""


class Input:
    WORKSPACEID = "workspaceid"
    TUNNELSESSION = "tunnelsession"
    TUNNELINTERFACE = "tunnelinterface"
    TUNNELDHCP = "tunneldhcp"
    TUNNELADDRESS = "tunneladdress"
    TUNNELNETMASK = "tunnelnetmask"
    

class Output:
    STATUSCODE = "statuscode"
    SUCCESS = "success"
    WORKSPACEID = "workspaceid"
    TASKID = "taskid"
    

class TasksstarttunnelInput(chariot.Input):
    schema = json.loads("""
   {
	"type": "object",
	"title": "Variables",
	"properties": {
		"tunneladdress": {
			"type": "string",
			"title": "本地隧道接口IP地址",
			"description": "",
			"order": 5
		},
		"tunneldhcp": {
			"type": "string",
			"title": "是否通过DHCP获得一个IP地址",
			"description": "",
			"order": 4
		},
		"tunnelinterface": {
			"type": "string",
			"title": "创建vpn跳板返回的tunnel_interface里面选择一个id，选择远程隧道接口",
			"description": "",
			"order": 3
		},
		"tunnelnetmask": {
			"type": "string",
			"title": "本地隧道接口掩码",
			"description": "",
			"order": 6
		},
		"tunnelsession": {
			"type": "string",
			"title": "创建vpn跳板返回的tunnel_session值",
			"description": "",
			"order": 2
		},
		"workspaceid": {
			"type": "string",
			"title": "项目id",
			"description": "",
			"order": 1
		}
	},
	"required": [
		"workspaceid",
		"tunnelsession",
		"tunnelinterface",
		"tunneldhcp",
		"tunneladdress",
		"tunnelnetmask"
	]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class TasksstarttunnelOutput(chariot.Output):
    schema = json.loads("""
   {
	"type": "object",
	"title": "Variables",
	"properties": {
		"statuscode": {
			"type": "integer",
			"title": "状态码",
			"description": "",
			"order": 1
		},
		"success": {
			"type": "string",
			"title": "结果",
			"description": "",
			"order": 2
		},
		"taskid": {
			"type": "string",
			"title": "任务id",
			"description": "",
			"order": 4
		},
		"workspaceid": {
			"type": "string",
			"title": "项目id",
			"description": "",
			"order": 3
		}
	},
	"required": [
		"statuscode"
	]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
